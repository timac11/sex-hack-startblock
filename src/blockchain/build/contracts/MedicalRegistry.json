{
  "contractName": "MedicalRegistry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "_entries",
      "outputs": [
        {
          "name": "entryHash",
          "type": "string"
        },
        {
          "name": "doctorAddr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "enrtyHash",
          "type": "string"
        }
      ],
      "name": "pushEntryHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getEntryHash",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"enrtyHash\",\"type\":\"string\"}],\"name\":\"pushEntryHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getEntryHash\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_entries\",\"outputs\":[{\"name\":\"entryHash\",\"type\":\"string\"},{\"name\":\"doctorAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/grigory/Documents/StartBlock/sex-hack/contracts/MedicalRegistry.sol\":\"MedicalRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/grigory/Documents/StartBlock/sex-hack/contracts/MedicalRegistry.sol\":{\"keccak256\":\"0x141ffa05a51793db5b8e5cdae22708d60974611b9cd3edff9f06169f0898dace\",\"urls\":[\"bzzr://1a52d43d855ff61727a3c1ff3092364db306f28c2d8b4b25b4e9a1dd327b681a\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060008054600160a060020a031916331790556104fa806100326000396000f3fe608060405260043610610050577c01000000000000000000000000000000000000000000000000000000006000350463104cea1781146100555780634ae6a98b1461011a578063a3af062d146101de575b600080fd5b34801561006157600080fd5b506101186004803603604081101561007857600080fd5b600160a060020a0382351691908101906040810160208201356401000000008111156100a357600080fd5b8201836020820111156100b557600080fd5b803590602001918460018302840111640100000000831117156100d757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610211945050505050565b005b34801561012657600080fd5b5061014d6004803603602081101561013d57600080fd5b5035600160a060020a031661028e565b604051808060200183600160a060020a0316600160a060020a03168152602001828103825284818151815260200191508051906020019080838360005b838110156101a257818101518382015260200161018a565b50505050905090810190601f1680156101cf5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156101ea57600080fd5b5061014d6004803603602081101561020157600080fd5b5035600160a060020a0316610370565b60408051808201825282815233602080830191909152600160a060020a038516600090815260018252929092208151805192939192610253928492019061041b565b50602091909101516001909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555050565b6060600061029a610499565b600160a060020a0384166000908152600160208181526040928390208351815460029481161561010002600019011693909304601f810183900490920283016060908101855293830182815292939092849290918491908401828280156103425780601f1061031757610100808354040283529160200191610342565b820191906000526020600020905b81548152906001019060200180831161032557829003601f168201915b505050918352505060019190910154600160a060020a03166020918201528151910151909350915050915091565b60016020818152600092835260409283902080548451600294821615610100026000190190911693909304601f81018390048302840183019094528383529283918301828280156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b50505060019093015491925050600160a060020a031682565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061045c57805160ff1916838001178555610489565b82800160010185558215610489579182015b8281111561048957825182559160200191906001019061046e565b506104959291506104b1565b5090565b60408051808201909152606081526000602082015290565b6104cb91905b8082111561049557600081556001016104b7565b9056fea165627a7a723058207a4281b696736e24a069432582e06c5b368fd3916f15bdbbc174caa484f699600029",
  "deployedBytecode": "0x608060405260043610610050577c01000000000000000000000000000000000000000000000000000000006000350463104cea1781146100555780634ae6a98b1461011a578063a3af062d146101de575b600080fd5b34801561006157600080fd5b506101186004803603604081101561007857600080fd5b600160a060020a0382351691908101906040810160208201356401000000008111156100a357600080fd5b8201836020820111156100b557600080fd5b803590602001918460018302840111640100000000831117156100d757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610211945050505050565b005b34801561012657600080fd5b5061014d6004803603602081101561013d57600080fd5b5035600160a060020a031661028e565b604051808060200183600160a060020a0316600160a060020a03168152602001828103825284818151815260200191508051906020019080838360005b838110156101a257818101518382015260200161018a565b50505050905090810190601f1680156101cf5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156101ea57600080fd5b5061014d6004803603602081101561020157600080fd5b5035600160a060020a0316610370565b60408051808201825282815233602080830191909152600160a060020a038516600090815260018252929092208151805192939192610253928492019061041b565b50602091909101516001909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555050565b6060600061029a610499565b600160a060020a0384166000908152600160208181526040928390208351815460029481161561010002600019011693909304601f810183900490920283016060908101855293830182815292939092849290918491908401828280156103425780601f1061031757610100808354040283529160200191610342565b820191906000526020600020905b81548152906001019060200180831161032557829003601f168201915b505050918352505060019190910154600160a060020a03166020918201528151910151909350915050915091565b60016020818152600092835260409283902080548451600294821615610100026000190190911693909304601f81018390048302840183019094528383529283918301828280156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b50505060019093015491925050600160a060020a031682565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061045c57805160ff1916838001178555610489565b82800160010185558215610489579182015b8281111561048957825182559160200191906001019061046e565b506104959291506104b1565b5090565b60408051808201909152606081526000602082015290565b6104cb91905b8082111561049557600081556001016104b7565b9056fea165627a7a723058207a4281b696736e24a069432582e06c5b368fd3916f15bdbbc174caa484f699600029",
  "sourceMap": "34:627:0:-;;;215:57;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;246:6:0;:19;;-1:-1:-1;;;;;;246:19:0;255:10;246:19;;;34:627;;;;;;",
  "deployedSourceMap": "34:627:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;278:190;;8:9:-1;5:2;;;30:1;27;20:12;5:2;278:190:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;278:190:0;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;278:190:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;278:190:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;278:190:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;278:190:0;;-1:-1:-1;278:190:0;;-1:-1:-1;;;;;278:190:0:i;:::-;;474:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;474:185:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;474:185:0;-1:-1:-1;;;;;474:185:0;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;474:185:0;-1:-1:-1;;;;;474:185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;474:185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;166:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;166:42:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;166:42:0;-1:-1:-1;;;;;166:42:0;;:::i;278:190::-;374:87;;;;;;;;;;;440:10;374:87;;;;;;;;-1:-1:-1;;;;;357:14:0;;-1:-1:-1;357:14:0;;;:8;:14;;;;;;:104;;;;374:87;;357:14;;:104;;:14;;:104;;;:::i;:::-;-1:-1:-1;357:104:0;;;;;;;;;;;;-1:-1:-1;;357:104:0;-1:-1:-1;;;;;357:104:0;;;;;;;;;-1:-1:-1;;278:190:0:o;474:185::-;530:13;545:7;564:18;;:::i;:::-;-1:-1:-1;;;;;585:14:0;;;;;;:8;:14;;;;;;;;;564:35;;;;;;;;;;;-1:-1:-1;;564:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;585:14;;564:35;;;;585:14;;564:35;;;585:14;564:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;564:35:0;;;-1:-1:-1;;564:35:0;;;;;;-1:-1:-1;;;;;564:35:0;;;;;;618:15;;635:16;;;618:15;;-1:-1:-1;635:16:0;-1:-1:-1;;474:185:0;;;:::o;166:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;166:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;166:42:0;;;;;;;-1:-1:-1;;;;;;;166:42:0;;:::o;34:627::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;34:627:0;;;-1:-1:-1;34:627:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;34:627:0;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.7.0;\n\ncontract MedicalRegistry {\n    address _onwer;\n\n    struct Entry {\n        string entryHash;\n        address doctorAddr;\n    }\n\n    mapping (address => Entry) public _entries;\n\n    constructor() public {\n        _onwer = msg.sender;\n    }\n\n    function pushEntryHash(address user, string memory enrtyHash) public {\n        _entries[user] = Entry({\n            entryHash: enrtyHash,\n            doctorAddr: msg.sender\n        });\n    }\n\n    function getEntryHash(address user) public view returns(string memory, address) {\n        Entry memory entry = _entries[user];\n\n        return (entry.entryHash, entry.doctorAddr);\n    }\n}",
  "sourcePath": "/Users/grigory/Documents/StartBlock/sex-hack/contracts/MedicalRegistry.sol",
  "ast": {
    "absolutePath": "/Users/grigory/Documents/StartBlock/sex-hack/contracts/MedicalRegistry.sol",
    "exportedSymbols": {
      "MedicalRegistry": [
        62
      ]
    },
    "id": 63,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 62,
        "linearizedBaseContracts": [
          62
        ],
        "name": "MedicalRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "_onwer",
            "nodeType": "VariableDeclaration",
            "scope": 62,
            "src": "65:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "65:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "MedicalRegistry.Entry",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 5,
                "name": "entryHash",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "109:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "109:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "name": "doctorAddr",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "135:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "135:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Entry",
            "nodeType": "StructDefinition",
            "scope": 62,
            "src": "86:74:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "_entries",
            "nodeType": "VariableDeclaration",
            "scope": 62,
            "src": "166:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Entry_$8_storage_$",
              "typeString": "mapping(address => struct MedicalRegistry.Entry)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "175:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "166:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Entry_$8_storage_$",
                "typeString": "mapping(address => struct MedicalRegistry.Entry)"
              },
              "valueType": {
                "contractScope": null,
                "id": 10,
                "name": "Entry",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 8,
                "src": "186:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Entry_$8_storage_ptr",
                  "typeString": "struct MedicalRegistry.Entry"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "236:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15,
                      "name": "_onwer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "246:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 16,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "255:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 17,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "255:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "246:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19,
                  "nodeType": "ExpressionStatement",
                  "src": "246:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 21,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:2:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:0:0"
            },
            "scope": 62,
            "src": "215:57:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "347:121:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "_entries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "357:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Entry_$8_storage_$",
                          "typeString": "mapping(address => struct MedicalRegistry.Entry storage ref)"
                        }
                      },
                      "id": 30,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "366:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "357:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Entry_$8_storage",
                        "typeString": "struct MedicalRegistry.Entry storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "enrtyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "405:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "440:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "440:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "Entry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "374:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Entry_$8_storage_ptr_$",
                          "typeString": "type(struct MedicalRegistry.Entry storage pointer)"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "entryHash",
                        "doctorAddr"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "374:87:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Entry_$8_memory",
                        "typeString": "struct MedicalRegistry.Entry memory"
                      }
                    },
                    "src": "357:104:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entry_$8_storage",
                      "typeString": "struct MedicalRegistry.Entry storage ref"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "357:104:0"
                }
              ]
            },
            "documentation": null,
            "id": 39,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pushEntryHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "301:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "enrtyHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "315:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "300:39:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:0:0"
            },
            "scope": 62,
            "src": "278:190:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "554:105:0",
              "statements": [
                {
                  "assignments": [
                    49
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49,
                      "name": "entry",
                      "nodeType": "VariableDeclaration",
                      "scope": 60,
                      "src": "564:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Entry_$8_memory_ptr",
                        "typeString": "struct MedicalRegistry.Entry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 48,
                        "name": "Entry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8,
                        "src": "564:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Entry_$8_storage_ptr",
                          "typeString": "struct MedicalRegistry.Entry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 53,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "_entries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "585:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Entry_$8_storage_$",
                        "typeString": "mapping(address => struct MedicalRegistry.Entry storage ref)"
                      }
                    },
                    "id": 52,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "594:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "585:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entry_$8_storage",
                      "typeString": "struct MedicalRegistry.Entry storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "564:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 54,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "618:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entry_$8_memory_ptr",
                            "typeString": "struct MedicalRegistry.Entry memory"
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "entryHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "618:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "635:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entry_$8_memory_ptr",
                            "typeString": "struct MedicalRegistry.Entry memory"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "doctorAddr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "635:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 58,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "617:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "functionReturnParameters": 47,
                  "id": 59,
                  "nodeType": "Return",
                  "src": "610:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntryHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "496:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "495:14:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "530:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "545:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "529:24:0"
            },
            "scope": 62,
            "src": "474:185:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 63,
        "src": "34:627:0"
      }
    ],
    "src": "0:661:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/grigory/Documents/StartBlock/sex-hack/contracts/MedicalRegistry.sol",
    "exportedSymbols": {
      "MedicalRegistry": [
        62
      ]
    },
    "id": 63,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 62,
        "linearizedBaseContracts": [
          62
        ],
        "name": "MedicalRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "_onwer",
            "nodeType": "VariableDeclaration",
            "scope": 62,
            "src": "65:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "65:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "MedicalRegistry.Entry",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 5,
                "name": "entryHash",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "109:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "109:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "name": "doctorAddr",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "135:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "135:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Entry",
            "nodeType": "StructDefinition",
            "scope": 62,
            "src": "86:74:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "_entries",
            "nodeType": "VariableDeclaration",
            "scope": 62,
            "src": "166:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Entry_$8_storage_$",
              "typeString": "mapping(address => struct MedicalRegistry.Entry)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "175:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "166:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Entry_$8_storage_$",
                "typeString": "mapping(address => struct MedicalRegistry.Entry)"
              },
              "valueType": {
                "contractScope": null,
                "id": 10,
                "name": "Entry",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 8,
                "src": "186:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Entry_$8_storage_ptr",
                  "typeString": "struct MedicalRegistry.Entry"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "236:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15,
                      "name": "_onwer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "246:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 16,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "255:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 17,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "255:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "246:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19,
                  "nodeType": "ExpressionStatement",
                  "src": "246:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 21,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:2:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:0:0"
            },
            "scope": 62,
            "src": "215:57:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "347:121:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "_entries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "357:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Entry_$8_storage_$",
                          "typeString": "mapping(address => struct MedicalRegistry.Entry storage ref)"
                        }
                      },
                      "id": 30,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "366:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "357:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Entry_$8_storage",
                        "typeString": "struct MedicalRegistry.Entry storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "enrtyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "405:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "440:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "440:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "Entry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "374:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Entry_$8_storage_ptr_$",
                          "typeString": "type(struct MedicalRegistry.Entry storage pointer)"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "entryHash",
                        "doctorAddr"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "374:87:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Entry_$8_memory",
                        "typeString": "struct MedicalRegistry.Entry memory"
                      }
                    },
                    "src": "357:104:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entry_$8_storage",
                      "typeString": "struct MedicalRegistry.Entry storage ref"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "357:104:0"
                }
              ]
            },
            "documentation": null,
            "id": 39,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pushEntryHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "301:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "enrtyHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "315:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "300:39:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:0:0"
            },
            "scope": 62,
            "src": "278:190:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "554:105:0",
              "statements": [
                {
                  "assignments": [
                    49
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49,
                      "name": "entry",
                      "nodeType": "VariableDeclaration",
                      "scope": 60,
                      "src": "564:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Entry_$8_memory_ptr",
                        "typeString": "struct MedicalRegistry.Entry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 48,
                        "name": "Entry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8,
                        "src": "564:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Entry_$8_storage_ptr",
                          "typeString": "struct MedicalRegistry.Entry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 53,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "_entries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "585:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Entry_$8_storage_$",
                        "typeString": "mapping(address => struct MedicalRegistry.Entry storage ref)"
                      }
                    },
                    "id": 52,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "594:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "585:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entry_$8_storage",
                      "typeString": "struct MedicalRegistry.Entry storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "564:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 54,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "618:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entry_$8_memory_ptr",
                            "typeString": "struct MedicalRegistry.Entry memory"
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "entryHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "618:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "635:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entry_$8_memory_ptr",
                            "typeString": "struct MedicalRegistry.Entry memory"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "doctorAddr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "635:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 58,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "617:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "functionReturnParameters": 47,
                  "id": 59,
                  "nodeType": "Return",
                  "src": "610:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntryHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "496:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "495:14:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "530:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "545:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "529:24:0"
            },
            "scope": 62,
            "src": "474:185:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 63,
        "src": "34:627:0"
      }
    ],
    "src": "0:661:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xE5EeFfbE5390570CA8c4dD8af191DA8f03eD8c08",
      "transactionHash": "0x904bc986d19d0569e803e6cc563b90a105a4fa002a940aa60134481193481209"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-18T13:34:49.981Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}