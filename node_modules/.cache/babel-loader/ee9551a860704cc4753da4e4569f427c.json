{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/aleksandrsokolov/Projects/identity-provider-ui/src/pages/registration/registration-page.tsx\";\nimport React from \"react\";\nimport \"./registration-page.less\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!'\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}'\n  }\n};\n\nconst RegistrationPage = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gr-ux-registration-page__form-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Form, Object.assign({\n    name: \"basic\",\n    className: \"gr-ux-registration-page__form\",\n    initialValues: {\n      remember: true\n    },\n    validateMessages: validateMessages\n  }, layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['user', 'name'],\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['user', 'surname'],\n    label: \"Surname\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['user', 'nickname'],\n    label: \"Nickname\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['user', 'email'],\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    wrapperCol: { ...layout.wrapperCol,\n      offset: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default RegistrationPage;","map":{"version":3,"sources":["/Users/aleksandrsokolov/Projects/identity-provider-ui/src/pages/registration/registration-page.tsx"],"names":["React","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","RegistrationPage","remember","type","offset"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,0BAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,IAAI,EAAE;AAAP,GADC;AAEXC,EAAAA,UAAU,EAAE;AAACD,IAAAA,IAAI,EAAE;AAAP;AAFD,CAAf;AAIA,MAAME,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAE,uBADW;AAErBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,iCADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL,GAFc;AAMrBA,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AANa,CAAzB;;AAWA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,sBACI;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,IAAI,EAAC,OAAX;AACM,IAAA,SAAS,EAAC,+BADhB;AAEM,IAAA,aAAa,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAFrB;AAGM,IAAA,gBAAgB,EAAEP;AAHxB,KAIUJ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMI,0BAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CAAjB;AAAmC,IAAA,KAAK,EAAC,MAAzC;AAAgD,IAAA,KAAK,EAAE,CAAC;AAACK,MAAAA,QAAQ,EAAE;AAAX,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,eASI,0BAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,SAAT,CAAjB;AAAsC,IAAA,KAAK,EAAC,SAA5C;AAAsD,IAAA,KAAK,EAAE,CAAC;AAACA,MAAAA,QAAQ,EAAE;AAAX,KAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,eAYI,0BAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,UAAT,CAAjB;AAAuC,IAAA,KAAK,EAAC,UAA7C;AAAwD,IAAA,KAAK,EAAE,CAAC;AAACA,MAAAA,QAAQ,EAAE;AAAX,KAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,eAeI,0BAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,CAAjB;AAAoC,IAAA,KAAK,EAAC,OAA1C;AAAkD,IAAA,KAAK,EAAE,CAAC;AAACO,MAAAA,IAAI,EAAE,OAAP;AAAgBP,MAAAA,QAAQ,EAAE;AAA1B,KAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,eAkBI,0BAAM,IAAN;AAAW,IAAA,UAAU,EAAE,EAAC,GAAGL,MAAM,CAACG,UAAX;AAAuBU,MAAAA,MAAM,EAAE;AAA/B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAlBJ,CADJ,CADJ;AA4BH,CA7BD;;AA+BA,eAAeH,gBAAf","sourcesContent":["import React from \"react\";\nimport {Button, Form, Input, InputNumber} from \"antd\";\nimport \"./registration-page.less\"\n\nconst layout = {\n    labelCol: {span: 8},\n    wrapperCol: {span: 16}\n};\nconst validateMessages = {\n    required: '${label} is required!',\n    types: {\n        email: '${label} is not validate email!',\n        number: '${label} is not a validate number!',\n    },\n    number: {\n        range: '${label} must be between ${min} and ${max}',\n    },\n};\n\nconst RegistrationPage = () => {\n    return (\n        <div className=\"gr-ux-registration-page__form-wrapper\">\n            <Form name=\"basic\"\n                  className=\"gr-ux-registration-page__form\"\n                  initialValues={{remember: true}}\n                  validateMessages={validateMessages}\n                  {...layout}\n            >\n                <Form.Item name={['user', 'name']} label=\"Name\" rules={[{required: true}]}>\n                    <Input/>\n                </Form.Item>\n                <Form.Item name={['user', 'surname']} label=\"Surname\" rules={[{required: true}]}>\n                    <Input/>\n                </Form.Item>\n                <Form.Item name={['user', 'nickname']} label=\"Nickname\" rules={[{required: true}]}>\n                    <Input/>\n                </Form.Item>\n                <Form.Item name={['user', 'email']} label=\"Email\" rules={[{type: 'email', required: true}]}>\n                    <Input/>\n                </Form.Item>\n                <Form.Item wrapperCol={{...layout.wrapperCol, offset: 8}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default RegistrationPage;"]},"metadata":{},"sourceType":"module"}